build --announce_rc
build --verbose_failures
build --compilation_mode=opt
build --output_filter='^//((?!(third_party):).)*$'`
build --color=yes
build --@io_bazel_rules_docker//transitions:enable=false
build --config=cpp
build --config=roma_sandboxed
build --config=otel

test --test_output=errors

build:run_all_tests --cache_test_results=no
test:run_all_tests --test_verbose_timeout_warnings

build:cpp --client_env=BAZEL_CXXOPTS=-std=c++17
build:cpp --cxxopt=-std=c++17
build:cpp --client_env=CC=clang
build:cpp --copt=-Werror=return-type
build:cpp --copt=-Werror=thread-safety-analysis
build:cpp --per_file_copt=external/com_github_google_quiche/quiche@-Wno-private-header
build:cpp --per_file_copt=external/nitrokmscli_.*\.c@-Wno-int-conversion

build:roma_sandboxed --per_file_copt=.*sandboxed_api.*@-Wno-return-type
build:roma_sandboxed --cxxopt=-fbracket-depth=512

try-import %workspace%/builders/.coverage.bazelrc

build:sanitizers_common --keep_going
build:sanitizers_common --cache_test_results=no
build:sanitizers_common --build_tests_only

# Address sanitizer, set action_env to segregate cache entries
build:asan --config=sanitizers_common
build:asan --action_env=PRIVACY_SANDBOX_SERVERS_ASAN=1
build:asan --strip=never
build:asan --compilation_mode=dbg
build:asan --copt=-fsanitize=address
build:asan --copt=-DADDRESS_SANITIZER
build:asan --copt=-O1
build:asan --copt=-g
build:asan --copt=-fno-omit-frame-pointer
build:asan --linkopt=-fsanitize=address
build:asan --linkopt=-fuse-ld=lld
build:asan --test_tag_filters=-noasan
# TODO(b/293876281): Re-enable ODR violation checking once it's fixed in the
# ZLib library that we depend on.
build:asan --action_env=ASAN_OPTIONS=detect_leaks=1:color=always:detect_odr_violation=0

# Address sanitizer, optimized build.
# Sometimes the asan config above produces translation units that are too large
# for Clang to process (because of SAPI).  For just those tests we use this
# config: this has worse debugging properties but it at least lets us run the
# sanitizer.
build:asanopt --config=sanitizers_common
build:asanopt --action_env=PRIVACY_SANDBOX_SERVERS_ASANOPT=1
build:asanopt --copt=-fsanitize=address
build:asanopt --copt=-DADDRESS_SANITIZER
build:asanopt --copt=-O1
build:asanopt --copt=-fno-omit-frame-pointer
build:asanopt --linkopt=-fsanitize=address
build:asanopt --linkopt=-fuse-ld=lld
build:asanopt --test_tag_filters=asanopt
# TODO(b/293876281): Re-enable ODR violation checking once it's fixed in the
# ZLib library that we depend on.
build:asanopt --action_env=ASAN_OPTIONS=detect_leaks=1:color=always:detect_odr_violation=0

# Thread sanitizer
build:tsan --config=sanitizers_common
build:tsan --action_env=PRIVACY_SANDBOX_SERVERS_TSAN=1
build:tsan --strip=never
build:tsan --copt=-fsanitize=thread
build:tsan --copt=-DTHREAD_SANITIZER
build:tsan --copt=-DDYNAMIC_ANNOTATIONS_ENABLED=1
build:tsan --copt=-DDYNAMIC_ANNOTATIONS_EXTERNAL_IMPL=1
build:tsan --copt=-O1
build:tsan --copt=-fno-omit-frame-pointer
build:tsan --linkopt=-fsanitize=thread
build:tsan --test_tag_filters=-notsan

# Memory sanitizer
build:msan --config=sanitizers_common
build:msan --action_env=PRIVACY_SANDBOX_SERVERS_MSAN=1
build:msan --strip=never
build:msan --copt=-fsanitize=memory
build:msan --copt=-DADDRESS_SANITIZER
build:msan --copt=-O1
build:msan --copt=-fno-omit-frame-pointer
build:msan --linkopt=-fsanitize=memory

# Undefined Behavior sanitizer
build:ubsan --config=sanitizers_common
build:ubsan --action_env=PRIVACY_SANDBOX_SERVERS_UBSAN=1
build:ubsan --strip=never
build:ubsan --copt=-fsanitize=undefined
build:ubsan --copt=-O1
build:ubsan --copt=-fno-omit-frame-pointer
build:ubsan --per_file_copt=//scp/cc/roma/sandbox/worker_api/sapi/.*@-DUNDEFINED_BEHAVIOR_SANITIZER
build:ubsan --linkopt=-lubsan
build:ubsan --test_tag_filters=-noubsan

# Required to build OpenTelemetry with Abseil
build:otel --@io_opentelemetry_cpp//api:with_abseil
# Required to build OpenTelemtry with logs API.
# TODO(b/287675870): Delete the following when the feature is no longer experimental.
build:otel --copt=-DENABLE_LOGS_PREVIEW

build:instance_local --//:instance=local

build:instance_gcp --//:instance=gcp

build:instance_aws --//:instance=aws

build:instance_azure --//:instance=azure

build:platform_aws --//:platform=aws

build:platform_azure --//:platform=azure

build:platform_gcp --//:platform=gcp

build:local_aws --config=instance_local
build:local_aws --config=platform_aws

build:local_gcp --config=instance_local
build:local_gcp --config=platform_gcp

build:gcp_gcp --config=instance_gcp
build:gcp_gcp --config=platform_gcp


build:aws_aws --config=instance_aws
build:aws_aws --config=platform_aws


build:local_azure --config=instance_local
build:local_azure --config=platform_azure

build:azure_azure --config=instance_azure
build:azure_azure --config=platform_azure

build:non_prod --//:build_flavor=non_prod
build:prod --//:build_flavor=prod
