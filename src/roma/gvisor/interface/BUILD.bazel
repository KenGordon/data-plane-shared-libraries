# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load(
    "@com_google_googleapis_imports//:imports.bzl",
    "cc_grpc_library",
    "cc_proto_library",
)
load("@rules_buf//buf:defs.bzl", "buf_lint_test")
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_proto//proto:defs.bzl", "proto_library")

proto_library(
    name = "roma_api_proto",
    srcs = ["roma_api.proto"],
)

cc_proto_library(
    name = "roma_api_cc_proto",
    deps = [
        ":roma_api_proto",
    ],
)

cc_grpc_library(
    name = "roma_api_grpc_proto",
    srcs = [":roma_api_proto"],
    grpc_only = True,
    visibility = ["//src/roma/gvisor:__subpackages__"],
    deps = [":roma_api_cc_proto"],
)

buf_lint_test(
    name = "roma_api_proto_lint",
    size = "small",
    config = "//src:buf.yaml",
    targets = [":roma_api_proto"],
)

cc_library(
    name = "roma_interface",
    hdrs = ["roma_interface.h"],
    visibility = ["//src/roma/gvisor:__subpackages__"],
    deps = [
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_library(
    name = "roma_gvisor",
    srcs = ["roma_gvisor.cc"],
    hdrs = ["roma_gvisor.h"],
    visibility = ["//src/roma/gvisor:__subpackages__"],
    deps = [
        ":roma_api_cc_proto",
        ":roma_api_grpc_proto",
        ":roma_interface",
        "//src/roma/gvisor/config",
        "//src/roma/gvisor/host:native_function_handler",
        "//src/util/status_macro:status_macros",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@nlohmann_json//:lib",
    ],
)

cc_library(
    name = "roma_service",
    hdrs = ["roma_service.h"],
    visibility = ["//visibility:public"],
    deps = [
        ":roma_api_cc_proto",
        ":roma_api_grpc_proto",
        ":roma_gvisor",
        ":roma_interface",
        ":roma_local",
        "//src/core/common/uuid",
        "//src/roma/gvisor/config",
        "//src/roma/gvisor/config:utils",
        "//src/roma/gvisor/host:native_function_handler",
        "//src/roma/interface",
        "//src/roma/metadata_storage",
        "//src/util/status_macro:status_macros",
        "//src/util/status_macro:status_util",
        "@com_github_grpc_grpc//:grpc++",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_library(
    name = "roma_local",
    srcs = ["roma_local.cc"],
    hdrs = ["roma_local.h"],
    visibility = ["//src/roma/gvisor:__subpackages__"],
    deps = [
        ":roma_interface",
        "//src/roma/gvisor/config",
        "//src/roma/gvisor/host:native_function_handler",
        "//src/util/status_macro:status_macros",
        "@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)
