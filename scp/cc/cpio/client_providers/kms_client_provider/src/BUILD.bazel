# Copyright 2022 Google LLC
# Copyright (C) Microsoft Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library")

package(default_visibility = ["//scp/cc:scp_internal_pkg"])

cc_library(
    name = "kms_client_provider_select_lib",
    deps =
        select(
            {
                "//scp/cc/public/cpio/interface:aws_cpio_lib_inside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/aws:tee_aws_kms_client_provider_lib",
                ],
                "//scp/cc/public/cpio/interface:aws_cpio_lib_outside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/aws:nontee_aws_kms_client_provider_lib",
                ],
                # We should split implementation here. Currently it uses fake attestation silently when it's outside TEE.
                "//scp/cc/public/cpio/interface:azure_cpio_lib_inside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/azure:azure_kms_client_provider_lib",
                ],
                "//scp/cc/public/cpio/interface:azure_cpio_lib_outside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/azure:azure_kms_client_provider_lib",
                ],
                "//scp/cc/public/cpio/interface:gcp_cpio_lib_inside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/gcp:tee_gcp_kms_client_provider_lib",
                ],
                "//scp/cc/public/cpio/interface:gcp_cpio_lib_outside_tee": [
                    "//scp/cc/cpio/client_providers/kms_client_provider/src/gcp:nontee_gcp_kms_client_provider_lib",
                ],
            },
            no_match_error = "Please build for AWS, Azure or GCP, inside TEE or outside TEE",
        ),
)
